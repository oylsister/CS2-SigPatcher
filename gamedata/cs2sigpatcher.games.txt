"Games"
{
	"csgo"
	{
		"Signatures"
		{
			// idk a good way to find this again, i just brute forced the vtable. offset is 136 on CTriggerPush
			"TriggerPush_Touch"
			{
				"library"		"server"
				"windows"		"\x48\x89\x5C\x24\x2A\x48\x89\x7C\x24\x2A\x55\x48\x8D\xAC\x24\x2A\x2A\x2A\x2A\xB8\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x48\x2B\xE0\x48\x8B\x02\x48\x8B\xF9"
				"linux"			"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xFC\x53\x48\x81\xEC\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x84\xC0\x74\x2A\x41\x80\xBC\x24"
			}
			// this is called in CTriggerPush::Touch, using IDA pseudocode look in an `if ( ( v & 0x80 ) != 0 )` and then `if ( v > 0.0 ) SetGroundEntity()`
			"SetGroundEntity"
			{
				"library"		"server"
				"windows"		"\x48\x89\x5C\x24\x2A\x48\x89\x6C\x24\x2A\x56\x57\x41\x56\x48\x83\xEC\x2A\x33\xED\x4C\x89\x7C\x24"
				"linux"			"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xFC\x53\x48\x89\xD3\x48\x83\xEC\x2A\x8B\x97"
			}
			// Check vauff's pin in #scripting
			"ServerMovementUnlock"
			{
				"library"		"server"
				"windows"		"\x76\x2A\xF2\x0F\x10\x4F\x2A\x41\x0F\x28\xC1\x0F\x28\xD1\xF3\x0F\x59\xC0"
				"linux"			"\x0F\x87\x2A\x2A\x2A\x2A\x49\x8B\x7C\x24\x2A\xE8\x2A\x2A\x2A\x2A\x66\x0F\xEF\xED\x66\x0F\xD6\x85"
			}
			// String: "player_jump", then find 42C80000h or in pseudocode "*(a2 + 68) = 1120403456;", changing from 100 to 145
			"CheckJumpButtonWater"
			{
				"library"		"server"
				"windows"		"\xC8\x42\xEB\x2A\x48\x8B\x4B\x30"
				"linux"			"\xC8\x42\x66\x0F\xEF\xFF\x0F\x2F\x7B\x5C"
			}
			// String: "StartGravity", a function call in the function with startgravity in ends with "return (sub_XXX( a1 + 48) > 1);", change the 1 to 2
			"WaterLevelGravity"
			{
				"library"		"server"
				"windows"		"\x3C\x01\x49\x8B\x5B\x10\x49\x8B\x7B\x18\x0F\x97\xC0\x41\x0F\x28"
				"linux"		 	"\x3C\x01\x0F\x97\xC0\x48\x81\xC4\x50\x01"
			}		
			// CBaseEntity::Use is at vtable offsets 139/140 for linux/windows
			// This signature points directly to the instruction to patch
			"CPhysBox_Use"
			{
				"library"	"server"
				"windows"	"\x4C\x8B\x43\x2A\x48\x8D\x8F\x2A\x2A\x2A\x2A\x48\x8B\x13\xE8\x2A\x2A\x2A\x2A\x48\x8B\x5C\x24\x2A\x48\x83\xC4\x2A\x5F\xC3\xCC\xCC\xCC\xCC\x40\x53"
				"linux"		"\x49\x8B\x54\x24\x08\x48\x8D\x4D\xE0\x48\xC7\x45\x2A\x2A\x2A\x2A\x2A"
			}
			// "%sRecv usercmd %d.  Margin:%5.1fms net +%2d queue =%5.1f total\n"
			"ProcessUsercmds"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x44\x88\x48\x20\x44\x89\x40\x18\x48\x89\x50\x10\x53"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x89\xD6\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x83\xEC\x38"
			}
			// "Error - cannot add bots after game is over."
			"BotNavIgnore"
			{
				"library"		"server"
				"windows"		"\x0F\x84\x2A\x2A\x2A\x2A\x80\xB8\x2A\x2A\x2A\x2A\x00\x0F\x84\x2A\x2A\x2A\x2A\x80\x3D\x2A\x2A\x2A\x2A\x00\x74\x15"
				"linux"			"\x48\x85\xC0\x74\x2E\x80\xB8\x2A\x2A\x2A\x2A\x00\x74\x25"
			}
		}

		"Patches"
		{
			// Server
			"ServerMovementUnlock"
			{
				"windows"		"\xEB"
				"linux"			"\x90\x90\x90\x90\x90\x90"
			}
			"FixWaterFloorJump"
			{
				"windows"		"\x11\x43"
				"linux"			"\x11\x43"
			}
			"WaterLevelGravity"
			{
				"windows"		"\x3C\x02"
				"linux"			"\x3C\x02"
			}
			// Jumping over a check for nav mesh
			"BotNavIgnore"
			{
				"windows"		"\xE9\x2C\x00\x00\x00\x90"
				"linux"			"\xE9\x15\x00\x00\x00"
			}
			// Make func_physbox pass itself as the caller in OnPlayerUse
			// pCaller = inputdata->pCaller ->  pCaller = this
			// Windows:  mov r8, [rbx+8]  	->  mov r8, rdi
			// Linux: 	 mov rdx, [r12+8] 	->  mov rdx, rbx
			"CPhysBox_Use"
			{
				"windows"		"\x49\x89\xF8\x90"
				"linux"			"\x48\x89\xDA\x90\x90"
			}
		}
	}
}
